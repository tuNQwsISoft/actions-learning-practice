name: build-test-deploy-dotnet
on:
  workflow_call:
    inputs:
      dotnet-version:
        description: ".NET version"
        type: string
        required: true
      project-path:
        description: "Project path"
        type: string
        required: true
      branch:
        description: "Deploy branch"
        type: string
        required: true
      lib-branch:
        description: "Library branch"
        type: string
        required: true
     
jobs:
  build:
    runs-on: [self-hosted, dev]

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Pull latest source
        run: |
          cd ${{ inputs.project-path }}
          git checkout ${{ inputs.branch }}
          git stash --include-untracked
          git reset --hard
          git clean -fd
          git pull origin ${{ inputs.branch }}
          cd subs/iSoft.Core
          git checkout ${{ inputs.lib-branch }}
          git stash --include-untracked
          git reset --hard
          git clean -fd
          git pull origin ${{ inputs.lib-branch }}

      - name: Install Dependencies
        run: |
          cd /usr/app/VMS/VMS-BE
          dotnet restore src/VMS.MainService/VMS.MainService.csproj
      - name: Build
        run: |
          cd /usr/app/VMS/VMS-BE
          dotnet build src/VMS.MainService/VMS.MainService.csproj
  deploy:
    needs: build

    runs-on: [self-hosted, deploy, backend]

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: use .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      # - name: Pull latest source code
      #   run: |
      #     cd /usr/app/VMS/VMS-BE
      #     git checkout staging
      #     git stash --include-untracked
      #     git reset --hard
      #     git clean -fd
      #     git pull origin staging

      - name: Build app image and start the app container
        run: |
          cd /usr/app/VMS/VMS-BE
          git checkout staging
          cd subs/iSoft.Core
          git checkout vms/main
          docker build -t vms-main-service:deploy /usr/app/VMS/VMS-BE
          docker rm -f vms-main-service
          cd /usr/app/VMS/VMS-BE/GrafanaGroup/
          docker compose -f docker-compose-staging.yml up -d vms-main-service
